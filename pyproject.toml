[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "poprox-recommender"
dynamic = ["version"]
description = ''
readme = "README.md"
requires-python = ">=3.11"
keywords = []
authors = [{ name = "Karl Higley", email = "khigley@umn.edu" }]
dependencies = [
  "lenskit==0.14.*",
  "nltk>=3.8,<4",
  "numpy>=1.26,<2",
  "torch==2.*",
  "smart_open==7.*",
  "safetensors>=0.4,<1",
  "transformers>=4.41,<5",
  "poprox-concepts@git+https://github.com/CCRI-POPROX/poprox-concepts.git@main",
  # direct dep on Pydantic to ensure it is in lockfile
  # this is necessary because conda-lock doesn't look into poprox-concepts to
  # find conda deps
  "pydantic~=2.7.1",
]

[project.urls]
Documentation = "https://github.com/CCRI-POPROX/poprox-recommender#readme"
Issues = "https://github.com/CCRI-POPROX/poprox-recommender/issues"
Source = "https://github.com/CCRI-POPROX/poprox-recommender"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.version]
path = "src/poprox_recommender/__about__.py"

[tool.hatch.envs.default]
python = "3.11"
# keep these dependencies in sync with dev/dev-environment.yml
dependencies = [
  "dvc[s3] ~=3.51",
  "docopt~=0.6",
  "pandas==2.*",
  "requests~=2.13",
  "coverage[toml]>=6.5",
  "pytest>=8",
  "pexpect~=4.9",
]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = ["- coverage combine", "coverage report"]
cov = ["test-cov", "cov-report"]

[tool.hatch.envs.lint]
detached = true
dependencies = ["ruff>=0.4", "pyright>=1.1,<2"]
[tool.hatch.envs.lint.scripts]
typing = "pyright {args:src/poprox_recommender tests}"
style = ["ruff check {args:.}", "ruff format --check --diff {args:.}"]
fmt = ["ruff format {args:.}", "ruff check --fix {args:.}", "style"]
all = ["style", "typing"]

[tool.ruff]
target-version = "py311"
line-length = 120

[tool.ruff.lint]
select = ["F", "I", "E"]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105",
  "S106",
  "S107",
  # Ignore complexity
  "C901",
  "PLR0911",
  "PLR0912",
  "PLR0913",
  "PLR0915",
]
unfixable = [
  # Don't touch unused imports
  "F401",
]

[tool.ruff.isort]
known-first-party = ["poprox_recommender", "poprox_concepts"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.coverage.run]
source_pkgs = ["poprox_recommender", "tests"]
branch = true
parallel = true
omit = ["src/poprox_recommender/__about__.py"]

[tool.coverage.paths]
poprox_recommender = [
  "src/poprox_recommender",
  "*/poprox-recommender/src/poprox_recommender",
]
tests = ["tests", "*/poprox-recommender/tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.conda-lock]
channels = ["pytorch", "conda-forge", "nodefaults"]
# restrict to commonly-used platforms
# if we need to add support for windows, we can try adding that here
platforms = ["win-64", "linux-64", "osx-arm64"]
# extra deps in the conda environment
[tool.conda-lock.dependencies]
# specify our Python version & make sure we have pip
python = "=3.11"
pip = ">=24"
# poprox concepts comes from PyPI
poprox-concepts = { source = "pypi" }
