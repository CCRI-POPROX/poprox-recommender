[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "poprox-recommender"
description = "POPROX recommender implementation and infrastructure."
authors = [{ name = "Karl Higley", email = "khigley@umn.edu" }]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
]
requires-python = ">= 3.12"
readme = "README.md"
license = { file = "LICENSE.md" }
dynamic = ["version"]
dependencies = [
  "httpx~=0.28.1",
  "fastapi[all]~=0.115.11",
  "mangum~=0.19.0",
  "uvicorn~=0.34.0",
  "lenskit>=2025.3.0a4.dev145",
  "nltk>=3.8,<4",
  "numpy>=1.26,<2",
  "torch~=2.2",
  "smart_open==7.*",
  "safetensors>=0.4,<1",
  "transformers[torch]>=4.41,<5",
  "rich ~=13.9",
  "poprox-concepts @ git+https://github.com/CCRI-POPROX/poprox-concepts.git",
  "scikit-learn>=1.3,<2",
]

[project.optional-dependencies]
deploy = ["awslambdaric ~=2.2"]

[project.urls]
Homepage = "https://docs.poprox.ai"
GitHub = "https://github.com/CCRI-POPROX/poprox-recommender"

## dependencies for various task sets
[dependency-groups]
lint = ["pre-commit ~=3.7", "ruff >=0.4", "pyright ~=1.1"]
test = [
  "requests >=2.31,<3",
  "coverage >=6.5",
  "pytest >=8",
  "scikit-learn>=1.3,<2",
]
eval = [
  "docopt-ng >=0.9",
  "pandas ~=2.0",
  "ray ~=2.44",
  { include-group = "data" },
  "scikit-learn>=1.3,<2",
]
dev = [
  "hatch ~=1.13",
  "ipython >=8",
  "notebook >=7.2",
  "pyarrow-stubs ~=17.11",
  { include-group = "lint" },
  { include-group = "test" },
  { include-group = "data" },
  { include-group = "eval" },
  "scikit-learn>=1.3,<2",
]
data = [
  "invoke ~=2.2",
  "dvc[s3] ~=3.51",
  "docopt-ng >=0.9",
  "pandas ~=2.0",
  "matplotlib ~=3.6",
  "seaborn ~=0.13.2",
  "plotnine ~=0.14.1",
  "jupytext >=1.16",
  "papermill~=2.6",
  "scipy ~=1.14.1",
  "pylatex ~=1.4.2",
  "jq ~=1.8",
  "zstandard ~=0.23",
  "wcmatch>=10.0",
]
# declare extras for Torch install
cpu = ["torch~=2.2"]
cuda = ["torch~=2.2"]

## UV index setup for PyTorch
[tool.uv]
conflicts = [[{ group = "cpu" }, { group = "cuda" }]]
# theoretically, our indices should keep us from needing this, but unfortunately not
index-strategy = "unsafe-first-match"

[tool.uv.sources]
torch = [
  { index = "pytorch-cpu", group = "cpu" },
  { index = "pytorch-cuda", group = "cuda" },
]
# following can be uncommented when temporarily using a git checkout
# lenskit = { git = "https://github.com/mdekstrand/lkpy.git", branch = "feature/settings-and-metrics" }

# pre-release version of LensKit
[[tool.uv.index]]
name = "lenskit-dev"
url = "https://pypi.lenskit.org/lenskit-dev/"

# PyPI index providing CPU-only PyTorch *without* clobbering unrelated PyPI
# packages.  Enabled by default, so we default to CPU-only Torch.
[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://pypi.lenskit.org/torch/cpu/"

# PyPI index providing GPU-enabled PyTorch *without* clobbering unrelated PyPI
# packages.  Also enabled (for transitive nvidia deps, "explicit" only works for
# direct dependencies), but lower-priority than CPU.
[[tool.uv.index]]
name = "pytorch-cuda"
url = "https://pypi.lenskit.org/torch/cu128/"

###### build and environment configurations ######
# basic hatch config
[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.sdist]
only-include = ["src", "tests", "LICENSE.md", "README.md"]

[tool.hatch.version]
path = "src/poprox_recommender/__about__.py"

###### tooling configurations ######
# ruff â€” formatting and lints
[tool.ruff]
target-version = "py311"
line-length = 120

[tool.ruff.lint]
select = ["F", "I", "E"]
unfixable = [
  # Don't touch unused imports
  "F401",
]

[tool.ruff.lint.per-file-ignores]
# tests can have unused imports (for pytest fixtures)
"tests/**/*" = ["F401"]

[tool.ruff.isort]
known-first-party = ["poprox_*"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.pyright]
exclude = [".venv/", ".pixi/", "node_modules"]

# Component's interface creates a lot of noise with this check
reportIncompatibleMethodOverride = false

[tool.coverage.run]
source_pkgs = ["poprox_recommender", "tests"]
branch = true
parallel = true
omit = ["src/poprox_recommender/__about__.py"]

[tool.coverage.paths]
poprox_recommender = ["src/poprox_recommender"]
tests = ["tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]
